version: "3.8"

services:
    vts_server:
        container_name: vts_server
        build:
            context: .
            dockerfile: docker/.Dockerfile
            target: dev
        ports:
            - 3000:3000
        environment:
            - PORT=5000
        # depends_on:
        # - rabbitmq
        # - mongo
        # - redis
        volumes:
            - ./:/app
        networks:
            - vts_network

#   mongo:
#     image: mongodb:4.4
#     container_name: vts_mongo
#     ports:
#         - "27018:27017"
#     restart: unless-stopped
#     volumes:
#         - /home/pratiknaik/mongodb/database:/data/db
#     networks:
#         - microservice_network

#     rabbitmq:
#         # There is a prebuilt RabbitMQ image; see
#         # https://hub.docker.com/_/rabbitmq/ for details.
#         # This variant is built on Alpine Linux (it's smaller) and includes
#         # the management UI.
#         image: 'rabbitmq:3.9-management-alpine'

#         # These ports are exposed on the host; 'hostport:containerport'.
#         # You could connect to this server from outside with the *host's*
#         # DNS name or IP address and port 5672 (the left-hand side of the
#         # colon).
#         ports:
#         # The standard AMQP protocol port
#             - '5671:5672'
#         # HTTP management UI
#             - '15671:15672'

#         # Run this container on a private network for this application.
#         # This is necessary for magic Docker DNS to work: other containers
#         # also running on this network will see a host name "rabbitmq"
#         # (the name of this section) and the internal port 5672, even though
#         # that's not explicitly published above.
#         networks:
#             - microservice_network
  
networks:
  vts_network:
    driver: bridge